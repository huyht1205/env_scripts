#!/bin/bash
export PS1='\[\033[32;1m\]\w\[\033[0m\]\$ '

MAC_IP=lh-mac.local
alias MountMac='sshfs hoangtrunghuy@${MAC_IP}:/data/workspace /data/workspace/'
alias cdlinuxWorkspace='cd /data/linux-workspace'
alias cdyocto='cd /data/yocto'
alias picocom='sudo picocom -e q'
alias pacman='pacman --color auto'
alias ConnectSerial='picocom -b 115200 /dev/ttyUSB0'
alias InitPokySDK='source /data/yocto/i.MX6/sdk/environment-setup-cortexa9hf-neon-poky-linux-gnueabi'
alias apt='sudo apt'
alias mount='sudo mount'
alias umount='sudo umount'
alias visudo='sudo visudo'
alias Vim='vim'

export LD_LIBRARY_PATH=/usr/lib64:/usr/local/lib

source /usr/share/bash-completion/completions/git

export PATH=${PATH}:/usr/local/gcc-arm-linux-gnueabihf/bin

function GotoPC
{
	PC_IP=hh-frontier.local
	PC_ACC=hh
	ssh ${PC_ACC}@${PC_IP}
}

function MountiBRIDGEDrive
{
	MOUNT_OPTS='-t cifs -o username=huy.ht,password=qylz39dd,rw,user,uid=hh'
	SERVER_IP='192.168.1.12'
	MOUNT_LOCATION='/data/ibridge'
	DRIVE_LIST=(LRapp release common iBJ)
	

	for drive in "${DRIVE_LIST[@]}"; do
		echo "Mount ${drive}"
		sudo mount ${MOUNT_OPTS} //${SERVER_IP}/${drive} ${MOUNT_LOCATION}/${drive}
	done
}

function print_error
{
	printf "\e[31mERROR: ${1}\e[0m\n"
}

function Deploy_rootfs
{
	MMC_DEV=${1}
	IMAGE=${2}

	if [[ -z ${1} || -z ${2} ]]; then
		printf "\e[31mUsage: Deploy_rootfs <device> <image.tar>\e[0m\n"
		return 1
	fi

	if [[ ! $(file ${IMAGE}) = *"POSIX tar archive (GNU)" ]]; then	
		printf "\e[31mERROR: ${IMAGE} is not tar archive file\e[0m\n"
		return 1
	fi

	MOUNTPOINT=/mnt

	sudo mkfs.ext4 ${MMC_DEV}
	sudo mount ${MMC_DEV} ${MOUNTPOINT} || return 1
	sudo tar xf ${IMAGE} -C ${MOUNTPOINT} || return 1
	sync
	sudo umount ${MMC_DEV}
	
	printf "Finish. SDCard is unmounted.\n"
}
